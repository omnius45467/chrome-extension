{"_id":"mem-fs-editor","_rev":"13-81fccda243c28ec7c527957f1d0933df","name":"mem-fs-editor","description":"File edition helpers working on top of mem-fs","dist-tags":{"latest":"1.2.2"},"versions":{"1.0.0":{"name":"mem-fs-editor","version":"1.0.0","description":"File edition helpers working on top of mem-fs","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/SBoudrias/mem-fs-editor"},"author":{"name":"Simon Boudrias"},"license":"MIT","bugs":{"url":"https://github.com/SBoudrias/mem-fs-editor/issues"},"homepage":"https://github.com/SBoudrias/mem-fs-editor","dependencies":{"glob":"^4.0.6","lodash":"^2.4.1","mkdirp":"^0.5.0","rimraf":"^2.2.8","through2":"^0.6.3","vinyl":"^0.4.3"},"devDependencies":{"mem-fs":"git+https://github.com/SBoudrias/mem-fs","mocha":"^1.21.5"},"gitHead":"87b12f8937e026d42b8db90c4868f46ce0e818e0","_id":"mem-fs-editor@1.0.0","_shasum":"664e92b02ed2abd94ae78434e7fc382e1c007357","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"sboudrias","email":"admin@simonboudrias.com"},"maintainers":[{"name":"sboudrias","email":"admin@simonboudrias.com"}],"dist":{"shasum":"664e92b02ed2abd94ae78434e7fc382e1c007357","tarball":"http://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-1.0.0.tgz"},"directories":{}},"1.0.1":{"name":"mem-fs-editor","version":"1.0.1","description":"File edition helpers working on top of mem-fs","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/SBoudrias/mem-fs-editor"},"author":{"name":"Simon Boudrias"},"license":"MIT","bugs":{"url":"https://github.com/SBoudrias/mem-fs-editor/issues"},"homepage":"https://github.com/SBoudrias/mem-fs-editor","dependencies":{"glob":"^4.0.6","lodash":"^2.4.1","mkdirp":"^0.5.0","rimraf":"^2.2.8","through2":"^0.6.3","vinyl":"^0.4.3"},"devDependencies":{"mem-fs":"git+https://github.com/SBoudrias/mem-fs","mocha":"^1.21.5"},"gitHead":"788ad597e356ef14404b2eb9eb97befe0594f588","_id":"mem-fs-editor@1.0.1","_shasum":"60cbcd583d7bc143fd2808f673207328cf97a744","_from":".","_npmVersion":"2.1.4","_nodeVersion":"0.10.32","_npmUser":{"name":"sboudrias","email":"admin@simonboudrias.com"},"maintainers":[{"name":"sboudrias","email":"admin@simonboudrias.com"}],"dist":{"shasum":"60cbcd583d7bc143fd2808f673207328cf97a744","tarball":"http://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-1.0.1.tgz"},"directories":{}},"1.1.0":{"name":"mem-fs-editor","version":"1.1.0","description":"File edition helpers working on top of mem-fs","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/SBoudrias/mem-fs-editor"},"author":{"name":"Simon Boudrias"},"license":"MIT","bugs":{"url":"https://github.com/SBoudrias/mem-fs-editor/issues"},"homepage":"https://github.com/SBoudrias/mem-fs-editor","dependencies":{"glob":"^4.0.6","lodash":"^2.4.1","mkdirp":"^0.5.0","rimraf":"^2.2.8","sinon":"^1.12.2","through2":"^0.6.3","vinyl":"^0.4.3"},"devDependencies":{"mem-fs":"git+https://github.com/SBoudrias/mem-fs","mocha":"^1.21.5"},"gitHead":"8fb6ed21790dba581beafe93b95f25e3271e047c","_id":"mem-fs-editor@1.1.0","_shasum":"80f382d823f3cc2a456a130bfa8d8ec46884a096","_from":".","_npmVersion":"2.1.11","_nodeVersion":"0.10.32","_npmUser":{"name":"sboudrias","email":"admin@simonboudrias.com"},"maintainers":[{"name":"sboudrias","email":"admin@simonboudrias.com"}],"dist":{"shasum":"80f382d823f3cc2a456a130bfa8d8ec46884a096","tarball":"http://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-1.1.0.tgz"},"directories":{}},"1.2.0":{"name":"mem-fs-editor","version":"1.2.0","description":"File edition helpers working on top of mem-fs","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/SBoudrias/mem-fs-editor"},"author":{"name":"Simon Boudrias"},"license":"MIT","files":["actions","util","index.js"],"dependencies":{"glob":"^4.0.6","lodash":"^2.4.1","mkdirp":"^0.5.0","rimraf":"^2.2.8","sinon":"^1.12.2","through2":"^0.6.3","vinyl":"^0.4.3"},"devDependencies":{"mem-fs":"^1.0.0","mocha":"^2.1.0"},"gitHead":"a5c0f5c5e1312f70f34f0257303a28c90eaca71c","bugs":{"url":"https://github.com/SBoudrias/mem-fs-editor/issues"},"homepage":"https://github.com/SBoudrias/mem-fs-editor","_id":"mem-fs-editor@1.2.0","_shasum":"1128bc4575f052e9698d037550c3cf2962715e51","_from":".","_npmVersion":"2.1.18","_nodeVersion":"0.10.32","_npmUser":{"name":"sboudrias","email":"admin@simonboudrias.com"},"maintainers":[{"name":"sboudrias","email":"admin@simonboudrias.com"}],"dist":{"shasum":"1128bc4575f052e9698d037550c3cf2962715e51","tarball":"http://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-1.2.0.tgz"},"directories":{}},"1.2.1":{"name":"mem-fs-editor","version":"1.2.1","description":"File edition helpers working on top of mem-fs","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/SBoudrias/mem-fs-editor"},"author":{"name":"Simon Boudrias"},"license":"MIT","files":["actions","util","index.js"],"dependencies":{"glob":"^4.0.6","lodash":"^2.4.1","mkdirp":"^0.5.0","rimraf":"^2.2.8","sinon":"^1.12.2","through2":"^0.6.3","vinyl":"^0.4.3"},"devDependencies":{"mem-fs":"^1.0.0","mocha":"^2.1.0"},"gitHead":"838074de4b5ac27808d5d38899ea7eebcbc032c0","bugs":{"url":"https://github.com/SBoudrias/mem-fs-editor/issues"},"homepage":"https://github.com/SBoudrias/mem-fs-editor","_id":"mem-fs-editor@1.2.1","_shasum":"23a31880904d0ed54b5ecf6e546a4bc91798d186","_from":".","_npmVersion":"2.1.6","_nodeVersion":"0.10.33","_npmUser":{"name":"sboudrias","email":"admin@simonboudrias.com"},"maintainers":[{"name":"sboudrias","email":"admin@simonboudrias.com"}],"dist":{"shasum":"23a31880904d0ed54b5ecf6e546a4bc91798d186","tarball":"http://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-1.2.1.tgz"},"directories":{}},"1.2.2":{"name":"mem-fs-editor","version":"1.2.2","description":"File edition helpers working on top of mem-fs","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/SBoudrias/mem-fs-editor"},"author":{"name":"Simon Boudrias"},"license":"MIT","files":["actions","util","index.js"],"dependencies":{"glob":"^4.0.6","lodash":"^2.4.1","mkdirp":"^0.5.0","rimraf":"^2.2.8","sinon":"^1.12.2","through2":"^0.6.3","vinyl":"^0.4.3"},"devDependencies":{"mem-fs":"^1.0.0","mocha":"^2.1.0"},"gitHead":"efcf96bc866b1b3b8893e70a8934032a4b12599b","bugs":{"url":"https://github.com/SBoudrias/mem-fs-editor/issues"},"homepage":"https://github.com/SBoudrias/mem-fs-editor","_id":"mem-fs-editor@1.2.2","_shasum":"d2bfd71189715d203233f0345fbb8b078bb9ea70","_from":".","_npmVersion":"2.4.1","_nodeVersion":"0.10.32","_npmUser":{"name":"sboudrias","email":"admin@simonboudrias.com"},"maintainers":[{"name":"sboudrias","email":"admin@simonboudrias.com"}],"dist":{"shasum":"d2bfd71189715d203233f0345fbb8b078bb9ea70","tarball":"http://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-1.2.2.tgz"},"directories":{}}},"readme":"mem-fs-editor [![Build Status](https://travis-ci.org/SBoudrias/mem-fs-editor.svg?branch=master)](https://travis-ci.org/SBoudrias/mem-fs-editor)\n=============\n\nFile edition helpers working on top of [mem-fs](https://github.com/SBoudrias/mem-fs)\n\nUsage\n-------------\n\n```js\nvar memFs = require('mem-fs');\nvar editor = require('mem-fs-editor');\n\nvar store = memFs.create();\nvar fs = editor.create(store);\n\nfs.write('somefile.js', 'var a = 1;');\n```\n\n### `#read(filepath, [options])`\n\nRead a file and return its contents as a string.\n\nYou can alternatively get the raw contents buffer if you pass `options.raw = true`.\n\nBy default, calling `read()` on a file path that does not exist throws error. You can, however, pass `options.defaults = 'your default content'` to get a default content you pass in, if you prefer to not deal with try/catch.\n\n### `#readJSON(filepath, [defaults])`\n\nRead a file and parse its contents as JSON.\n\n`readJSON()` internally calls `read()` and will throw error if the file path you pass in does not exist. But if you pass in an optional `defaults`, the `defaults` content will be returned in case of the target file is missing, instead of throwing error (error would still be thrown if JSON.parse failed to parse your target file).\n\n### `#write(filepath, contents)`\n\nReplace the content of a file (existing or new) with a string or a buffer.\n\n### `#writeJSON(filepath, contents[, replacer [, space]])`\n\nReplace the content of a file (existing or new) with an object that is to be converted by calling `JSON.stringify()`.\n\n`contents` should usually be a JSON object, but it can technically be anything that is acceptable by [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify).\n\nOptionally pass `replacer` and `space` as the last two arguments, as defined by [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify). `spacer` is used to format the output string (prettify).\n\nDefault value for `space` is `2`, when not specified.\n\n### `#delete(filepath, [options])`\n\nDelete a file or a directory.\n\n`filePath` can also be a `glob`. If `filePath` is glob, you can optionally pass in an `options.globOptions` object to change its pattern matching behavior. The full list of options are being described [here](https://github.com/isaacs/node-glob#options). The `sync` flag is forced to be `true` in `globOptions`.\n\n### `#copy(from, to, [options])`\n\nCopy a file from the `from` path to the `to` path.\n\nOptionally, pass an `options.process` function (`process(contents)`) returning a string or a buffer who'll become the new file content. The process function will take a single contents argument who is the copied file contents as a `Buffer`.\n\n`from` can be a glob pattern that'll be match against the file system. If that's the case, then `to` must be an output directory. For a globified `from`, you can optionally pass in an `options.globOptions` object to change its pattern matching behavior. The full list of options are being described [here](https://github.com/isaacs/node-glob#options). The `nodir` flag is forced to be `true` in `globOptions` to ensure a vinyl object representing each matching directory is marked as `deleted` in the `mem-fs` store.\n\n### `#copyTpl(from, to, context, [settings])`\n\nCopy the `from` file and parse its content as an underscore template where `context` is the template context.\n\nOptionally pass a template `settings` object.\n\n### `#move(from, to, [options])`\n\nMove/rename a file from the `from` path to the `to` path.\n\n`#move` internally uses `#copy` and `#delete`, so `from` can be a glob pattern, and you can provide `options.globOptions` with it.\n\n### `#exists(filepath)`\n\nReturns `true` if a file exists. Returns `false` if the file is not found or deleted.\n\n### `#commit([filters,] callback)`\n\nPersist every changes made to files in the mem-fs store to disk.\n\nIf provided, `filters` is an array of TransformStream to be applied on a stream of vinyl files (like gulp plugins).\n\n`callback` is called once the files are updated on disk.\n","maintainers":[{"name":"sboudrias","email":"admin@simonboudrias.com"}],"time":{"modified":"2015-03-16T02:09:14.447Z","created":"2014-11-06T20:34:31.168Z","1.0.0":"2014-11-06T20:34:31.168Z","1.0.1":"2014-11-30T06:59:01.261Z","1.1.0":"2015-01-02T20:27:16.269Z","1.2.0":"2015-01-21T07:06:08.432Z","1.2.1":"2015-01-28T20:03:50.113Z","1.2.2":"2015-03-16T02:09:14.447Z"},"homepage":"https://github.com/SBoudrias/mem-fs-editor","repository":{"type":"git","url":"https://github.com/SBoudrias/mem-fs-editor"},"author":{"name":"Simon Boudrias"},"bugs":{"url":"https://github.com/SBoudrias/mem-fs-editor/issues"},"license":"MIT","readmeFilename":"README.md","users":{"kermit666":true},"_attachments":{},"_etag":"\"1YQP13KLMPOS4I1Z90RBIY3I8\""}